package ifi.demo.model;
// Generated Oct 24, 2017 5:59:32 PM by Hibernate Tools 5.2.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * ServiceRequestCalls generated by hbm2java
 */
@Entity
@Table(name = "service_request_calls", catalog = "servicecalls")
public class ServiceRequestCalls implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer callId;
	private ChargeCodes chargeCodes;
	private Contacts contacts;
	private Problems problems;
	private StatusCodes statusCodes;
	private String dateTimeOfCall;
	private String otherDetails;
	private Set<ServiceRequestActions> serviceRequestActionses = new HashSet<ServiceRequestActions>(0);

	public ServiceRequestCalls() {
	}

	public ServiceRequestCalls(String dateTimeOfCall, String otherDetails) {
		this.dateTimeOfCall = dateTimeOfCall;
		this.otherDetails = otherDetails;
	}

	public ServiceRequestCalls(ChargeCodes chargeCodes, Contacts contacts, Problems problems, StatusCodes statusCodes,
			String dateTimeOfCall, String otherDetails, Set<ServiceRequestActions> serviceRequestActionses) {
		this.chargeCodes = chargeCodes;
		this.contacts = contacts;
		this.problems = problems;
		this.statusCodes = statusCodes;
		this.dateTimeOfCall = dateTimeOfCall;
		this.otherDetails = otherDetails;
		this.serviceRequestActionses = serviceRequestActionses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "call_id", unique = true, nullable = false)
	public Integer getCallId() {
		return this.callId;
	}

	public void setCallId(Integer callId) {
		this.callId = callId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JsonIgnore
	@JoinColumn(name = "charge_code")
	public ChargeCodes getChargeCodes() {
		return this.chargeCodes;
	}

	public void setChargeCodes(ChargeCodes chargeCodes) {
		this.chargeCodes = chargeCodes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JsonIgnore
	@JoinColumn(name = "contact_id")
	public Contacts getContacts() {
		return this.contacts;
	}

	public void setContacts(Contacts contacts) {
		this.contacts = contacts;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JsonIgnore
	@JoinColumn(name = "problem_code")
	public Problems getProblems() {
		return this.problems;
	}

	public void setProblems(Problems problems) {
		this.problems = problems;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JsonIgnore
	@JoinColumn(name = "status_code")
	public StatusCodes getStatusCodes() {
		return this.statusCodes;
	}

	public void setStatusCodes(StatusCodes statusCodes) {
		this.statusCodes = statusCodes;
	}

	@Column(name = "date_time_of_call", nullable = false, length = 50)
	public String getDateTimeOfCall() {
		return this.dateTimeOfCall;
	}

	public void setDateTimeOfCall(String dateTimeOfCall) {
		this.dateTimeOfCall = dateTimeOfCall;
	}

	@Column(name = "other_details", nullable = false)
	public String getOtherDetails() {
		return this.otherDetails;
	}

	public void setOtherDetails(String otherDetails) {
		this.otherDetails = otherDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "serviceRequestCalls")
	@JsonIgnore
	public Set<ServiceRequestActions> getServiceRequestActionses() {
		return this.serviceRequestActionses;
	}

	public void setServiceRequestActionses(Set<ServiceRequestActions> serviceRequestActionses) {
		this.serviceRequestActionses = serviceRequestActionses;
	}

}
